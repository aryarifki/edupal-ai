version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: edupal_postgres
    environment:
      POSTGRES_DB: edupal_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - edupal_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: edupal_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - edupal_network

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: edupal_backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/edupal_ai
      - REDIS_URL=redis://redis:6379
      - API_PORT=3001
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "3001:3001"
      - "3002:3002"  # WebSocket port
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    networks:
      - edupal_network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: edupal_frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
      - NEXT_PUBLIC_WS_URL=ws://localhost:3002
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - edupal_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  edupal_network:
    driver: bridge